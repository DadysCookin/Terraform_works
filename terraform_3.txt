

Terraform $ terraform destroy
Terraform $ nano my_ec2.tf

# Define provider for Ohio region
provider "aws" {
  alias  = "ohio"
  region = "us-east-2"
}

# Define provider for N. Virginia region
provider "aws" {
  alias  = "virginia"
  region = "us-east-1"
}

# Create EC2 instance in Ohio region
resource "aws_instance" "ohio_instance" {
  provider       = aws.ohio
  ami            = "ami-0cb91c7de36eed2cb" # Amazon Linux 2 AMI in Ohio
  instance_type  = "t2.micro"

  tags = {
    Name = "hello-ohio"
  }
}

# Create EC2 instance in N. Virginia region
resource "aws_instance" "virginia_instance" {
  provider       = aws.virginia
  ami            = "ami-0cb91c7de36eed2cb" # Amazon Linux 2 AMI in N. Virginia
  instance_type  = "t2.micro"

  tags = {
  
Terraform $ terraform validate
Success! The configuration is valid.

Terraform $ terraform plan

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.ohio_instance will be created
  + resource "aws_instance" "ohio_instance" {
      + ami                                  = "ami-0cb91c7de36eed2cb"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = (known after apply)
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "hello-ohio"
        }
      + tags_all                             = {
          + "Name" = "hello-ohio"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

  # aws_instance.virginia_instance will be created
  + resource "aws_instance" "virginia_instance" {
      + ami                                  = "ami-0cb91c7de36eed2cb"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = (known after apply)
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "hello-virginia"
        }
      + tags_all                             = {
          + "Name" = "hello-virginia"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.

────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply"
now.

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

aws_instance.ohio_instance: Destroying... [id=i-0dafe55bb7fcf4a2c]
aws_instance.ohio_instance: Still destroying... [id=i-0dafe55bb7fcf4a2c, 10s elapsed]
aws_instance.ohio_instance: Still destroying... [id=i-0dafe55bb7fcf4a2c, 20s elapsed]
aws_instance.ohio_instance: Still destroying... [id=i-0dafe55bb7fcf4a2c, 30s elapsed]
aws_instance.ohio_instance: Still destroying... [id=i-0dafe55bb7fcf4a2c, 40s elapsed]
aws_instance.ohio_instance: Still destroying... [id=i-0dafe55bb7fcf4a2c, 50s elapsed]
aws_instance.ohio_instance: Still destroying... [id=i-0dafe55bb7fcf4a2c, 1m0s elapsed]
aws_instance.ohio_instance: Still destroying... [id=i-0dafe55bb7fcf4a2c, 1m10s elapsed]
aws_instance.ohio_instance: Destruction complete after 1m13s

Destroy complete! Resources: 1 destroyed.



